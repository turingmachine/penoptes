#!/usr/bin/env ruby

# Copyright (C) 2008 Simon Josi <josi@puzzle.ch>
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
# 
# penoptes - monitor text files for changes

require 'yaml'
require 'optparse'
require 'fileutils'
require 'socket'
require 'git'

class Penoptes
  def initialize
    register_signal_handlers
    evaluate_cli_switches
    load_resources
    configuration = Configuraton.new
  end


private # are methods below here

  # register signal handlers
  def register_signal_handlers
    %w{ INT KILL QUIT TERM }.each do |signal|
      trap(signal) { terminate }
    end
  end

  # terminate programm sanely
  def terminate(exit_code = 0)
    exit exit_status
  end

  # evaluate cli switches
  def evaluate_cli_switches
    scriptname = File.basename($0)
    begin
      opts = OptionParser.new do |opts|
        opts.banner = "Usage: #{scriptname} [options]"

        opts.on("-v", "--verbose", "show whats going on") do |d|
          @cli['verbose'] = true
        end

        opts.on("-c", "--configuration", 
                "specify a configuration file other than /etc/penoptes.yml") do |s|
          @cli['configuration'] = s
        end

        opts.on("-f", "--fast", "don't slow down io") do |s|
          @cli['fast'] = true
        end

        opts.on("-h", "--help",  "display this help and exit") do |h|
          puts opts.banner
          puts "Options:"
          puts opts.summarize
          terminate
        end

        opts.parse!
      end
    rescue
      puts "#{scriptname}: " + $!
      puts "Try \`#{scriptname} --help' for more information."
      terminate 1
    end
  end

end

class Configuration
  DEFAULTS = {
    configuration_file => '/etc/penoptes.yml',
    id => Socket.gethostname,
    watchlist => '/etc/penoptes.watchlist',
    state_directory => '/var/lib/penoptes',
    remote_repository => 'off',
    mailfrom => root,
    mailto => root,
    add_cycle: 1h,
    change_cycle: 15m,
  }

  def metaclass; class << self; self; end; end

  def initialize(configfile = CONFIG_FILE)
    unless File.exists? configfile
      raise IOError, "#{configfile}: No such file or directory."
    end

    YAML::load_file(configfile).each do |key, value|
      instance_variable_set "@" + key, value
      metaclass.module_eval { attr_reader key }
    end
  end
end

class Watchlist
  def initialize

  end
end

class Report

end

class Repository

end

